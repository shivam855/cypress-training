# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & upload artifact

on:
  push:
    branches: [master]
    paths-ignore:
      - "package-lock.json"
      - "package.json"

#  Other build jobs must wait for this one
concurrency:
  group: master-build
  cancel-in-progress: false

jobs:
  # https://github.community/t/paths-ignore-not-working-for-base-level-files/18445/4
  check-changes:
    runs-on: ubuntu-20.04
    outputs:
      continue: ${{steps.changefile.outputs.continue}}
    steps:
      - uses: actions/checkout@v2
        if: ${{ always() }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: git branch

      - name: file changes
        id: changefile
        # Checks if the commit author is the Hudson user. If it is, then don't continue
        run: |
          commit_author=$(git log -1 --pretty=format:'%ae' | xargs)
          echo "AUTHOR"
          echo $commit_author
          if [[ -z $commit_author || $commit_author == 'no-reply-hudson@maersk.com' ]]
          then
            echo ::set-output name=continue::false
          else
            echo ::set-output name=continue::true
          fi

  build-test-sonar-upload:
    runs-on: ubuntu-20.04
    # Only run if check-changes says it should continue
    needs: check-changes
    if: needs.check-changes.outputs.continue == 'true'
    env:
      NEXUS_URL: https://tools-nexus.maerskdev.net/repository/maven-hosted-releases
      ARTIFACT_NAME: ui-booking
      NEXUS_USER: ${{ secrets.MDN_NEXUS_WRITE_USERNAME }}
      NEXUS_PASS: ${{ secrets.MDN_NEXUS_WRITE_PASSWORD }}
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout app
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up npm registry
        uses: bduff9/use-npmrc@v1.2
        with:
          dot-npmrc: ${{ secrets.NEXUS_GITHUB_NPMRC }}

      # From https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # CI, Build and Test
      - run: npm ci

      - run: npm test

      - name: Save test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: coverage/**/*

      # Because Jenkins can get in the way, we're going to pull the code again here
      - name: Checkout app again
        uses: actions/checkout@v2

      - name: Checkout Maersk Github Actions
        uses: actions/checkout@v2
        with:
          repository: Maersk-Global/github-actions
          token: ${{ secrets.REPO_CHECKOUT_TOKEN }}
          path: .github/actions/maersk-actions
          debug: true

      # From https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci

      - name: Set up git user
        run: |
          git config --global user.email "no-reply-hudson@maersk.com"
          git config --global user.name "Hudson Automation"

      - name: Versioning
        run: |
          npm config set tag-version-prefix ''
          NEW_VERSION=$(npm version patch)
          echo VERSION=${NEW_VERSION} >> $GITHUB_ENV
        if: ${{ success() }}

      - name: Commit and Push to branch
        if: ${{ success() }}
        uses: "./.github/actions/maersk-actions/push-to-protected-branch"
        with:
          admin_token: ${{ secrets.REPO_ADMIN_TOKEN }}
          commit_message: ${{ github.event.head_commit.message }}
          push_new_files: true
          push_tags: true

      - run: npm run build
        if: ${{ success() }}

      # Re-applies previous results to save time
      - name: Re-apply previous test results
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: coverage

      # Sonar has to run after the tests have run, or there is no lcov file to be processed
      # All params are passed in here rather than the sonar.properties file as the provided action has some merge issues
      # Due to https://github.com/facebook/jest/issues/9773 you need Jest 25 or higher to generate an lcov report with relateive file paths
      # otherwise sonar-scanner (in a docker container) can't resolve the file paths and the coverage report fails
      # packages needed: @vue/cli-plugin-unit-jest@5 babel-jest@25 jest@25 vue-jest@4
      - name: SonarQube
        id: sonar
        if: ${{ success() }}
        uses: ./.github/actions/maersk-actions/SonarQube
        with:
          host: ${{ secrets.MDN_SonarQube_Host }}
          login: ${{ secrets.MDN_SonarQube_Token }}
          extra_sonar_args: -Dsonar.sources=src -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info -Dsonar.testExecutionReportPaths=coverage/test-reporter.xml -Dsonar.exclusions=src/main.js -Dsonar.language=js

      # Upload the artifact to Nexus
      - name: Compress the artifact
        id: compressArtifact
        if: ${{ success() }}
        run: |
          cd $GITHUB_WORKSPACE/dist && tar -zcvf $ARTIFACT_NAME-$VERSION.tgz *

      - name: Read the configuration in uiConfig.yaml
        run: |
          echo ARTIFACT_LOCATION=$(grep "artifactLocation" ./pipelineConfig/uiConfig.yaml|cut -d':' -f2 | xargs | sed 's/\./\//g') >> $GITHUB_ENV
          echo TENANT=$(grep "tenant" ./pipelineConfig/uiConfig.yaml|cut -d':' -f2 | xargs) >> $GITHUB_ENV

      - name: Upload artifact
        id: uploadArtifact
        if: ${{ success() }}
        run: |
          ARTIFACT_URL=$NEXUS_URL/$ARTIFACT_LOCATION/$ARTIFACT_NAME/$VERSION/$ARTIFACT_NAME-$VERSION.tgz
          echo $ARTIFACT_URL
          curl -u "$NEXUS_USER:$NEXUS_PASS" --upload-file $GITHUB_WORKSPACE/dist/$ARTIFACT_NAME-$VERSION.tgz $ARTIFACT_URL

      - name: Teams Failure notification
        if: ${{ failure() }}
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ms-teams-webhook-uri: ${{ secrets.TEAMS_WEBHOOK_URI }}
          notification-summary: Upload of version ${{ env.VERSION }} failed
          notification-color: B80012

      - name: Teams Success notification
        if: ${{ success() }}
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ms-teams-webhook-uri: ${{ secrets.TEAMS_WEBHOOK_URI }}
          notification-summary: Upload of version ${{ env.VERSION }} successful
          notification-color: 40AB35

